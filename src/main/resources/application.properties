# ---------- APPLICATION ----------- #
spring.application.id = gista-be
spring.application.name =  @project.name@
spring.application.version = @project.version@
spring.profiles.active = dev
server.port = 18080
server.servlet.contextPath = /api

spring.data.rest.default-page-size=20
spring.data.rest.default-current-page=0
spring.data.rest.default-sorting=created_at,desc
spring.data.rest.default-multiple-sorting=created_at|desc
spring.cloud.compatibility-verifier.enabled=false
spring.cloud.config.import-check.enabled=false
spring.main.allow-circular-references = true
#spring.config.import=optional:configserver:

spring.security.authWhitelist=/auth,/swagger-resources/**,/swagger-ui.html,/swagger-ui,/swagger-ui/**,/v2/api-docs,/v3/api-docs/**,/webjars/**,/actuator/**
spring.security.allowOriginList=*
spring.security.requestMethodList=POST,GET,PUT,DELETE
spring.security.allowHeaderList=X-B3-TraceId,X-B3-SpanId,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization
spring.security.exposeHeaderList=X-B3-TraceId,X-B3-SpanId,Access-Control-Allow-Headers,Authorization,x-xsrf-token,Access-Control-Allow-Headers,Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers
spring.security.intranetIpPrefix=10.,172.26.

# ---------- KEYCLOAK ----------- #
keycloak.auth-server-url=https://ait-keycloak.akarinti.tech
keycloak.realm=GISTA
keycloak.resource=GISTA
keycloak.bearer-only=true
keycloak.use-resource-role-mappings=true
keycloak.ssl-required=none
gista.keycloak.management.username=sysapp-cli

gista.keycloak.management.client.integrations.gista-integration =

gista.config.authenticated-urls=

# ---------- MAIL ----------- #
gista.mail.help=dlog_solutioncentre@bca.co.id


# ---------- JPA ENVERS AUDIT ----------- #
jpa.properties.hibernate.jdbc.batch_size = ${gista.integration.batch-size}
jpa.properties.hibernate.jdbc.batch_versioned_data = true
jpa.properties.hibernate.order_inserts = true
jpa.properties.hibernate.order_updates = true
spring.jpa.open-in-view = true
spring.jpa.properties.org.hibernate.envers.audit_table_suffix=_AUD
spring.jpa.properties.org.hibernate.envers.revision_field_name=REVISION_ID
spring.jpa.properties.org.hibernate.envers.revision_type_field_name=REVISION_TYPE

# ---------- DATASOURCE ----------- #
database.ip = ait-psql.akarinti.tech
database.port = 5432
database.schema = db_gista_base
database.username = postgres
database.password = I7bcfi5aOC

spring.datasource.username = ${database.username}
spring.datasource.password = ${database.password}
spring.datasource.url=jdbc:postgresql://${database.ip}:${database.port}/${database.schema}
spring.flyway.enable = true
spring.flyway.out-of-order=true
spring.flyway.locations = classpath:/db/migration

# ---------- DATASOURCE PROXY ----------- #
decorator.datasource.datasource-proxy.logging = slf4j
decorator.datasource.datasource-proxy.query.enable-logging = false
decorator.datasource.datasource-proxy.query.log-level = info
decorator.datasource.datasource-proxy.query.logger-name = proxy-datasources
decorator.datasource.datasource-proxy.slow-query.enable-logging = true
decorator.datasource.datasource-proxy.slow-query.log-level = info
decorator.datasource.datasource-proxy.slow-query.logger-name = proxy-datasources-slow
decorator.datasource.datasource-proxy.slow-query.threshold = 300
decorator.datasource.datasource-proxy.multiline = false
decorator.datasource.datasource-proxy.json-format = true
decorator.datasource.datasource-proxy.count-query = false

## ---------- TOMCAT ----------- #
server.tomcat.accesslog.enable = true
server.tomcat.accesslog.directory = /dev
server.tomcat.accesslog.prefix = stdout
server.tomcat.accesslog.buffered = false
server.tomcat.accesslog.suffix =
server.tomcat.accesslog.file-date-format = .yyyy-MM-dd
server.tomcat.remote-ip-header = x-forwarderd-for
server.tomcat.accesslog.pattern = { \
                                    "@timestamp": "%t", \
                                    "level": "access", \
                                    "host": "@{org.apache.tomcat.remoteAddr}r", \
                                    "method": "%m", \
                                    "url": "%U", \
                                    "response_code": "%s", \
                                    "bytes_sent": "%b", \
                                    "process_time": "%D", \
                                    "referer": "%{Referer}i", \
                                    "user_agent": "%{User_agent}i", \
                                    "username": "%{username}r", \
                                    "trace": "%{X-B3-TraceId}r", \
                                    "span": "%{X-B3-SpanId}r", \
                                    "parent": "%{X-B3-ParentId}r" \
                                }

# ---------- LOGGING LEVEL ----------- #
logging.org.hibernate = false
logging.level.root = info
logging.level.org.hibernate.SQL = DEBUG
logging.level.org.hibernate.Type.descriptor.sql.BasicBinder = TRACE
spring.jpa.show-sql = false
spring.jpa.properties.hibernate.format_sql = false

# ---------- PROMETHEUS ----------- #
management.endpoints.web.exposure.include=prometheus,health,info,metric
management.endpoint.health.show-details=always

# ---------- ZIPKIN ----------- #
spring.zipkin.base-url = http://8.215.64.113:9411
spring.sleuth.sampler.probability = 1.0
spring.zipkin.service.name = ${spring.application.name}
spring.sleuth.support-join = false

# ---------- SENTRY ----------- #
sentry.dsn=https://c276e8a5535045489015389b21652e8e@o1118251.ingest.sentry.io/6152047
sentry.level = warn
sentry.enable-tracing = true
sentry.debug= false
sentry.exception-resolver-order=-1
sentry.traces-sample-rate=1.0


## ---------- KAFKA ----------- #
#spring.kafka.bootstrap-servers =
#spring.kafka.admin.fail-fast = true
#spring.kafka.jaas.enable = true
#spring.kafka.jaas.control-flag = required
#spring.sleuth.messaging.kafka.enable = true
#spring.kafka.properties.sasl.jaas.config = com.sun.security.auth.module.Krb5LoginModule
#required
#useKeyTab = true
#storeKey = false
#debug = false
#useTicketCase = false
#keyTab="/sad"
#principal= ""
#spring.kafka.properties.sasl.cerberus.service.name =
#spring.kafka.sasl.trust-store-location = file:/resource/store/
#spring.kafka.sasl.trust-store-password =
#spring.kafka.properties.security.protocol =

spring.kafka.producer.bootstrap-servers = ait2-kafka.akarinti.tech:19092
spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.properties.max.block.ms = 10000
spring.kafka.producer.properties.request.timeout.ms = 5000
spring.kafka.producer.properties.retries = 1
spring.kafka.producer.properties.retry.backoff.ms = 5000
spring.kafka.producer.death-letter-topic=OPENSHIFT_ERP_GISTA_DLT_RAW

spring.kafka.consumer.bootstrap-servers = ait2-kafka.akarinti.tech:19092
spring.kafka.consumer.max-retry=2
spring.kafka.consumer.topic.group-id= CG_OPENSHIFT_GISTA_BASE_RAW
spring.kafka.consumer.topic.retry=OPENSHIFT_ERP_GISTA_BASE_RETRY_RAW
spring.kafka.consumer.topic.identity.application=OPENSHIFT_GISTA_APPLICATION_SYNC_RAW
spring.kafka.consumer.topic.identity.application-role=OPENSHIFT_GISTA_APPLICATIONROLE_SYNC_RAW
spring.kafka.consumer.topic.identity.composite-role=OPENSHIFT_GISTA_COMPOSITEROLE_SYNC_RAW
spring.kafka.consumer.topic.identity.assosiate-role=OPENSHIFT_GISTA_ASSOSIATEROLE_SYNC_RAW
spring.kafka.consumer.topic.identity.access-role=OPENSHIFT_GISTA_ACCESSROLE_SYNC_RAW
spring.kafka.consumer.topic.identity.menu=OPENSHIFT_GISTA_MENU_SYNC_RAW
spring.kafka.consumer.topic.identity.user=OPENSHIFT_GISTA_USER_SYNC_RAW

spring.maintenance-mode=false

## ---------- OPEN FEIGN ----------- #
feign.okhttp.enabled = true
feign.httpclient.enabled = false
feign.httpclient.disableSslValidation = true
# ---------- ATTACHMENT ----------- #
gista.config.base-url=https://erp-gista-dev.gsit-erp.com/api
gista.config.attachment.url=${gista.config.base-url}/attachment
asset.attachment.submission.document-type=DPOCAM
asset.attachment.submission.transaction-type=ASET0001
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB

# ---------- ROLE ASSET ----------- #
gista.asset.role.admin=ASSET_OPR_BOP,ASSET_SPV_BOP
gista.asset.role.kp=ASSET_OPR_KP,ASSET_SPV_KP
gista.asset.role.txb=ASSET_OPR_TXB,ASSET_SPV_TXB
gista.asset.role.kanwil=ASSET_OPR_KANWIL,ASSET_SPV_KANWIL
gista.asset.role.audit=ASSET_VIEW
gista.asset.role.support=ASSET_SUPPORT1,ASSET_SUPPORT2